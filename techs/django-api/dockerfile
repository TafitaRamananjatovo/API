# Utilisation de l'image de base Python 3
FROM python:3.11-slim-bullseye

# Définition du répertoire de travail dans le conteneur
WORKDIR /app

# Configuration des variables d'environnement pour réduire la taille de l'image
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    DEBIAN_FRONTEND=noninteractive

# Installation de toutes les dépendances système en une seule commande pour optimiser les couches
RUN apt-get update && apt-get install -y --no-install-recommends \
    # Dépendances Python et compilation
    build-essential \
    python3-dev \
    python3-setuptools \
    python3-wheel \
    python3-pip \
    gettext \
    # Dépendances PostgreSQL
    postgresql-client \
    # Dépendances WeasyPrint et PDF
    libcairo2 \
    libpango-1.0-0 \
    libpangocairo-1.0-0 \
    libgdk-pixbuf2.0-0 \
    libgdk-pixbuf2.0-dev \
    libpango1.0-dev \
    libcairo2-dev \
    # Autres dépendances système
    libjpeg-dev \
    zlib1g-dev \
    libgirepository1.0-dev \
    gir1.2-glib-2.0 \
    python3-gi \
    libffi-dev \
    libssl-dev \
    libxml2-dev \
    libxslt1-dev \
    shared-mime-info \
    fonts-liberation \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Copie du fichier requirements.txt
COPY requirements.txt .

# Installation de pip, setuptools et wheel à jour
RUN pip install --upgrade pip setuptools wheel cython

# Installation des packages problématiques explicitement
RUN pip install --no-cache-dir docopt path-and-address svglib

# Installation des autres dépendances
RUN pip install --no-cache-dir -r requirements.txt
# Copie des fichiers de l'application
COPY . .

# Commande par défaut pour exécuter les migrations, créer un superutilisateur et lancer le serveur
CMD ["bash", "-c", "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"]